{{- if .Values.apps.argocd.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: {{ include "argocd.appproject" . }}
  source:
    repoURL: {{ .Values.cluster.ociRepoUrl | quote }}
    targetRevision: {{ .Values.apps.argocd.targetRevision }}
    chart: argocd
    helm:
      values: |
        global:
        {{-  if .Values.cluster.imagePullSecrets }}
          imagePullSecrets:
          {{- toYaml .Values.cluster.imagePullSecrets | nindent 10 }}
        {{- end }}
          image:
            repository: {{ .Values.apps.argocd.argocdImageRepo }}
            tag: {{ .Values.apps.argocd.argocdImageTag | quote }}
        grafanaDashboards:
          enabled: {{ .Values.apps.argocd.grafanaDashboard.enabled }}
        prometheus:
          enabled: {{ .Values.apps.prometheus.enabled }}
          serviceMonitor:
            enabled: {{ .Values.apps.prometheus.enabled }}
            labels:
              prometheus: {{ include "prometheus.label" . | quote }}
          rules:
            enabled: {{ .Values.apps.prometheus.enabled }}
            labels:
              prometheus: {{ include "prometheus.label" . | quote }}
        argoCD:
        {{- if .Values.apps.argocd.extraObjects }}
          extraObjects:
            - apiVersion: secrets.renault.com/v1alpha1
              kind: VaultConfig
              metadata:
                name: argocd-vault
                namespace: argocd
              spec:
                host: {{ .Values.apps.argocd.extraObjects.vaultAddr }}
                mountPath: {{ .Values.apps.argocd.extraObjects.vaultMountPath }}
                role: gke-default-{{ .Values.apps.argocd.extraObjects.vaultRole }}-role
                serviceAccountRef:
                  name: argocd-server
            - apiVersion: secrets.renault.com/v1alpha1
              kind: VaultSecret
              metadata:
                name: argocd-gitlabee-credentials
                namespace: argocd
              spec:
                refreshInterval: "24h"
                target:
                  name: gitlabee-creds
                  template:
                    metadata:
                      labels:
                        argocd.argoproj.io/secret-type: repo-creds
                data:
                - secretKey: username
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/gitlabee-creds
                    property: username
                - secretKey: password
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/gitlabee-creds
                    property: password
                - secretKey: name
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/gitlabee-creds
                    property: name
                - secretKey: url
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/gitlabee-creds
                    property: url
                - secretKey: type
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/gitlabee-creds
                    property: type
                configRef:
                  name: argocd-vault
            - apiVersion: secrets.renault.com/v1alpha1
              kind: VaultSecret
              metadata:
                name: argocd-artifactory-credentials
                namespace: argocd
              spec:
                refreshInterval: "24h"
                target:
                  name: artifactory-creds
                  template:
                    metadata:
                      labels:
                        argocd.argoproj.io/secret-type: repo-creds
                data:
                - secretKey: username
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/artifactory-creds
                    property: username
                - secretKey: password
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/artifactory-creds
                    property: password
                - secretKey: name
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/artifactory-creds
                    property: name
                - secretKey: url
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/artifactory-creds
                    property: url
                - secretKey: type
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/artifactory-creds
                    property: type
                configRef:
                  name: argocd-vault
            - apiVersion: secrets.renault.com/v1alpha1
              kind: VaultSecret
              metadata:
                name: argocd-helm-artifact-registry
                namespace: argocd
              spec:
                refreshInterval: "24h"
                target:
                  name: helm-artifact-registry
                  template:
                    metadata:
                      labels:
                        argocd.argoproj.io/secret-type: repository
                data:
                - secretKey: enableOCI
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: enableOCI
                - secretKey: password
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: password
                - secretKey: name
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: name
                - secretKey: url
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: url
                - secretKey: type
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: type
                - secretKey: username
                  remoteRef:
                    key: secret/projects/irn-70740/{{ .Values.apps.argocd.extraObjects.vaultRole }}/others/helm-artifact-registry
                    property: username
                configRef:
                  name: argocd-vault
        {{- end }}
          configs:
            cm:
              accounts.image-updater: apiKey
              url: https://{{ .Values.apps.argocd.hosts }}
              oidc.config: |
                name: {{ .Values.apps.argocd.oidcConfigName }}
                issuer: https://{{ .Values.apps.argocd.issuerUrl }}
                clientID: {{ .Values.apps.argocd.oidcConfigClientID }}
                {{- with .Values.apps.argocd.oidcConfigClientSecret }}
                clientSecret: {{ toYaml . }}
                {{- end }}
              resource.customizations: |
                admissionregistration.k8s.io/MutatingWebhookConfiguration:
                  ignoreDifferences: |
                    jsonPointers:
                    - /webhooks/0/clientConfig/caBundle
                    - /webhooks/1/clientConfig/caBundle
                admissionregistration.k8s.io/ValidatingWebhookConfiguration:
                  ignoreDifferences: |
                    jsonPointers:
                    - /webhooks/0/clientConfig/caBundle
                    - /webhooks/1/clientConfig/caBundle
                apiextensions.k8s.io/CustomResourceDefinition:
                  ignoreDifferences: |
                    jsonPointers:
                    - /status
                dynatrace.com:OneAgent:
                  ignoreDifferences: |
                    jsonPointers:
                    - /spec/env
                networking.k8s.io/Ingress:
                  health.lua: |
                    hs = {}
                    hs.status = "Healthy"
                    return hs
                argoproj.io/Application:
                  health.lua: |
                    hs = {}
                    hs.status = "Progressing"
                    hs.message = ""
                    if obj.status ~= nil then
                      if obj.status.health ~= nil then
                        hs.status = obj.status.health.status
                        if obj.status.health.message ~= nil then
                          hs.message = obj.status.health.message
                        end
                      end
                    end
                    return hs
              resource.exclusions: |
                - apiGroups:
                  - "velero.io"
                  kinds:
                  - "Backup"
                  clusters:
                  - "*"
              resource.compareoptions: |
                ignoreAggregatedRoles: true
            params:
              {{-  if .Values.apps.argocd.dexServer }}
              server.dex.server: {{ .Values.apps.argocd.dexServer }}
              {{- end }}
              server.insecure: true
            secret:
              createSecret: true
            rbac:
              policy.csv: |-
                p, role:org-admin, applications, *, */*, allow
                p, role:org-admin, clusters, *, *, allow
                p, role:org-admin, repositories, get, *, allow
                p, role:org-admin, repositories, create, *, allow
                p, role:org-admin, repositories, update, *, allow
                p, role:org-admin, repositories, delete, *, allow
                p, role:org-admin, projects, get,* , allow
                p, role:org-editor, applications, get, */*, allow
                p, role:org-editor, applications, update, */*, allow
                p, role:org-editor, applications, create, */*, allow
                p, role:org-editor, applications, sync, */*, allow
                p, role:org-editor, clusters, get, *, allow
                p, role:org-editor, clusters, update, *, allow
                p, role:org-editor, repositories, get, *, allow
                p, role:org-editor, repositories, create, *, allow
                p, role:org-editor, repositories, update, *, allow
                p, role:org-editor, projects, get, * , allow
                p, role:org-editor, projects, update, * , allow
                g, irn-70740-gke-operators, role:org-admin
            {{- range .Values.apps.argocd.AdditionalRbacPolicies }}
                {{ toYaml . }}
            {{- end }}
            repositories:
            {{- toYaml .Values.apps.argocd.repositories | nindent 14 }}
            credentialTemplates:
            {{- toYaml .Values.apps.argocd.credentialTemplates | nindent 14 }}
          controller:
            podAnnotations:
            {{- toYaml .Values.apps.argocd.controller.podAnnotations | nindent 14 }}
            resources:
              {{- .Values.apps.argocd.controller.resources | toYaml | nindent 14 }}
            metrics:
              enabled: {{ .Values.apps.prometheus.enabled }}
              serviceMonitor:
                enabled: {{ .Values.apps.prometheus.enabled }}
                selector:
                  prometheus: {{ include "prometheus.label" . | quote }}
          repoServer:
            replicas: 1
            podAnnotations:
            {{- toYaml .Values.apps.argocd.repoServer.podAnnotations | nindent 14 }}
            resources:
              {{- .Values.apps.argocd.repoServer.resources | toYaml | nindent 14 }}
            metrics:
              enabled: {{ .Values.apps.prometheus.enabled }}
              serviceMonitor:
                enabled: {{ .Values.apps.prometheus.enabled }}
                selector:
                  prometheus: {{ include "prometheus.label" . | quote }}
            env:
              - name: NO_PROXY
                value: "{{ .Values.cluster.noProxy }}, *.cluster.local"
            envFrom:
              - secretRef:
                  name: {{ .Values.cluster.proxyEnvSecret }}
          dex:
            image:
              repository: {{ .Values.apps.dex.dexImageRepo }}
              tag: {{ .Values.apps.dex.dexImageTag | quote }}
            env:
              - name: NO_PROXY
                value: "{{ .Values.cluster.noProxy }}, *.cluster.local"
            envFrom:
              - secretRef:
                  name: {{ .Values.cluster.proxyEnvSecret }}
          redis:
            image:
              repository: {{ .Values.apps.argocd.redisImageRepo }}
              tag: {{ .Values.apps.argocd.redisImageTag | quote }}
          redis-ha:
            enabled: false
          server:
            podAnnotations:
            {{- toYaml .Values.apps.argocd.server.podAnnotations | nindent 14 }}
            replicas: 1
            resources:
              {{- .Values.apps.argocd.server.resources | toYaml | nindent 14 }}
            metrics:
              enabled: {{ .Values.apps.prometheus.enabled }}
              serviceMonitor:
                enabled: {{ .Values.apps.prometheus.enabled }}
                selector:
                  prometheus: {{ include "prometheus.label" . | quote }}
            ingress:
              annotations:
              {{- range $key, $value := .Values.apps.argocd.annotations }}
              {{ $key | indent 2 }}: {{ $value | quote }}
              {{- end }}
              hosts:
                - {{ .Values.apps.argocd.hosts }}
              tls:
                - secretName: {{ .Values.apps.argocd.tlsSecretName }}
                  hosts:
                    - {{ .Values.apps.argocd.hosts }}
            clusterAdminAccess:
              enabled: {{ .Values.apps.argocd.admin.enabled | quote }}
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ include "argocd.namespace" . | quote }}

  {{- include "infra.syncPolicy" (list . "argocd" ) | nindent 2 }}

{{- end }}
