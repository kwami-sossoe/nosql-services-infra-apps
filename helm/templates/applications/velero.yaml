{{- if .Values.apps.velero.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  name: velero
spec:
  project: {{ include "velero.appproject" . }}
  source:
    repoURL: {{ .Values.cluster.ociRepoUrl | quote }}
    targetRevision: {{ .Values.apps.velero.targetRevision | quote }}
    chart: velero
    helm:
      values: |
        velero:
          image:
          {{- if .Values.cluster.imagePullSecrets }}
            imagePullSecrets:
            - {{ toYaml (index .Values.cluster.imagePullSecrets 0).name }}
          {{- end }}
            repository: {{ .Values.apps.velero.veleroImageRepo }}
            tag: {{ .Values.apps.velero.veleroImageTag }}
          {{- if .Values.apps.velero.dynatrace.enabled }}
          podAnnotations:
            metrics.dynatrace.com/path: /metrics
            metrics.dynatrace.com/port: "8085"
            metrics.dynatrace.com/scrape: "true"
            metrics.dynatrace.com/secure: "false"
          {{- end }}
          extraVolumes:
            - name: gcp-ksa
              projected:
                defaultMode: 420
                sources:
                - serviceAccountToken:
                    path: token
                    audience: "{{ .Values.cluster.gcpProjectId }}.svc.id.goog"
                    expirationSeconds: 172800
                - configMap:
                    name: velero-cloudsdk-config
                    optional: false
                    items:
                      - key: "config"
                        path: "google-application-credentials.json"
          extraVolumeMounts:
            - name: gcp-ksa
              mountPath: /var/run/secrets/tokens/gcp-ksa
              readOnly: true
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 2Gi
          initContainers:
            - name: velero-plugin-for-gcp
              image: {{ .Values.apps.velero.veleroPluginGcpImageRepo }}:{{ .Values.apps.velero.veleroPluginGcpImageTag }}
              volumeMounts:
              - mountPath: /target
                name: plugins
              resources:
                requests:
                  cpu: 500m
                  memory: 1Gi
          credentials:
            useSecret: false
            extraSecretRef: {{ .Values.cluster.proxyEnvSecret }}
          kubectl:
            image:
              repository: {{ .Values.apps.velero.kubectlImageRepo }}
              tag: {{ .Values.apps.velero.kubectlImageTag }}
          configuration:
            backupStorageLocation:
              bucket: {{ include "velero.bucket" . | quote }}
              config:
                serviceAccount: {{ .Values.apps.velero.gsa | quote }}
            volumeSnapshotLocation:
              config:
                project: {{ .Values.cluster.gcpProjectId }}
            extraEnvVars:
              GOOGLE_APPLICATION_CREDENTIALS: /var/run/secrets/tokens/gcp-ksa/google-application-credentials.json
            {{- if .Values.cluster.noProxy }}
              NO_PROXY: "{{ .Values.cluster.noProxy }}"
            {{- end }}
          snapshotsEnabled: false
          serviceAccount:
            server:
              create: true
              annotations:
                iam.gke.io/gcp-service-account: {{ .Values.apps.velero.gsa }}
        backups:
          enabled: true
          schedule: "0 2 * * *"
          ttl: 720h0m0s
          namespaces:

        {{- if .Values.apps.velero.configConnector.enabled }}
        tags:
          configConnector: true
        gcpBucket:
          global:
            cnrmNamespace: {{ .Values.cluster.cnrmNamespace }}
            location: {{ .Values.apps.velero.configConnector.gcpBucket.location | default "EUROPE-WEST1" }}
            abandon: {{ .Values.apps.velero.configConnector.gcpBucket.abandon }}
            sia: "gke"
            env: {{ .Values.cluster.clusterEnv }}
            context: {{ .Values.cluster.clusterName }}
            gcpProjectId: {{ .Values.cluster.gcpProjectId }}
          bucketName: {{ .Values.apps.velero.bucket }}
          accessControl:
            uniformBucketLevelAccess: {{ .Values.apps.velero.configConnector.gcpBucket.uniformBucketLevelAccess | default true }}
            publicAccessPrevention: {{ .Values.apps.velero.configConnector.gcpBucket.publicAccessPrevention | default "inherited" }}
            createCloudIamPolicy: true
            iamPolicy:
              - member: serviceAccount:{{ .Values.apps.velero.gsa }}
                role: roles/storage.admin

        iamPolicyMember:
          global:
            gsa: {{ .Values.apps.velero.configConnector.iamPolicyMember.gsa }}
            gcpProjectId: {{ .Values.cluster.gcpProjectId }}
            cnrmNamespace: {{ .Values.cluster.cnrmNamespace }}
          roles:
            - projects/{{ .Values.cluster.gcpProjectId }}/roles/{{ .Values.apps.velero.configConnector.iamCustomRole.roleName }}

        workloadIdentity:
          global:
            cnrmNamespace: {{ .Values.cluster.cnrmNamespace }}
            gcpProjectId: {{ .Values.cluster.gkeProjectId }}
            gsa:
              create: {{ .Values.apps.velero.configConnector.workloadIdentity.gsa.create }}
              name: {{ .Values.apps.velero.configConnector.workloadIdentity.gsa.name }}
              project: {{ .Values.cluster.gcpProjectId }}
            abandon: {{ .Values.apps.velero.configConnector.workloadIdentity.abandon }}
            ksa:
              namespace: {{ .Values.apps.velero.configConnector.workloadIdentity.ksa.name }}
              name: {{ .Values.apps.velero.configConnector.workloadIdentity.ksa.namespace }}
        
        iamCustomRole:
          global:
            cnrmNamespace: {{ .Values.cluster.cnrmNamespace }}
            gcpProjectId: {{ .Values.cluster.gcpProjectId }}
            sia: "gke"
            env: {{ .Values.cluster.clusterEnv }}
            context: {{ .Values.cluster.clusterName }}
          customRoleName: {{ .Values.apps.velero.configConnector.iamCustomRole.roleName }}
          description: {{ .Values.apps.velero.configConnector.iamCustomRole.description }}
          title: {{ .Values.apps.velero.configConnector.iamCustomRole.title }}
          permissions:
          {{- range .Values.apps.velero.configConnector.iamCustomRole.permissions }}
            - {{ . }}
          {{- end }}

        {{- end}}

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ include "velero.namespace" . | quote }}
  
  {{- include "infra.syncPolicy" (list . "velero" ) | nindent 2 }}

  ignoreDifferences:
  - group: "velero.io"
    kind: "Backup"
    jsonPointers:
    - /spec/hook


{{- end }}
