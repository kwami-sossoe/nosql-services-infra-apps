{{- if .Values.apps.grafana.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  name: grafana-stack
spec:
  project: {{ include "grafana.appproject" . }}
  source:
    repoURL: {{ .Values.cluster.ociRepoUrl | quote }}
    targetRevision: {{ .Values.apps.grafana.targetRevision | quote }}
    chart: grafana-stack
    helm:
      values: |
        dashboards:
          k8s:
            create: false
        ingress:
          enabled: true
          annotations:
            kubernetes.io/tls-acme: "false"
            kubernetes.io/ingress.allow-http: "false"
            kubernetes.io/ingress.class: {{ include "grafana.ingressClass" . }}
          host: {{ include "grafana.url" . }}
          tls:
            secretName: {{ include "infra-stack.tlsSecret" . }}
        grafana:
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  access: proxy
                  url: http://prometheus-operated.{{ include "prometheus.namespace" . }}:9090
          image:
            repository: {{ .Values.apps.grafana.grafanaImageRepo | quote }}
            tag: {{ .Values.apps.grafana.grafanaImageTag | quote }}
          {{-  if .Values.cluster.imagePullSecrets }}
            pullSecrets:
            - {{ toYaml (index .Values.cluster.imagePullSecrets 0).name }}
          {{- end }}
          sidecar:
            image:
                repository: {{ .Values.apps.grafana.k8sSideCarImageRepo | quote }}
                tag: {{ .Values.apps.grafana.k8sSideCarImageTag | quote }}
            dashboards:
              searchNamespace: "ALL"
            datasources:
              searchNamespace: "ALL"
          {{- if .Values.apps.grafana.priorityClassName }}
          priorityClassName: "{{ .Values.apps.grafana.priorityClassName }}"
          {{- end }}
          envFromSecrets:
            - name: {{ .Values.cluster.proxyEnvSecret }}
          env:
            GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://{{ include "dex.url" . }}/dex/auth"
            GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://{{ include "dex.url" . }}/dex/token"
            GF_AUTH_GENERIC_OAUTH_API_URL: "https://{{ include "dex.url" . }}/dex/userinfo"
            GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups"
            GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], '{{ required "A valid .Values.apps.grafana.oidcGroupAdmin entry required!" .Values.apps.grafana.oidcGroupAdmin }}') && 'Admin' || contains(groups[*], '{{ required "A valid .Values.apps.grafana.oidcGroupEditor entry required!" .Values.apps.grafana.oidcGroupEditor }}') && 'Editor' || contains(groups[*], '{{ required "A valid .Values.apps.grafana.oidcGroupViewer entry required!" .Values.apps.grafana.oidcGroupViewer }}') && 'Viewer'"
            NO_PROXY: "{{ .Values.cluster.noProxy }}, *.cluster.local"
            GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
          grafana.ini:
            auth.generic_oauth:
              role_attribute_strict: true
            server:
              root_url: https://{{ include "grafana.url" . }}/
            users:
              auto_assign_org: false
              auto_assign_org_role: Viewer
        grafanadexclient:
          enabled: false
        vault:
          enabled: {{ .Values.apps.grafana.vault.enabled }}
        {{- if .Values.apps.grafana.vault.enabled }}
          serviceAccount:
            create: {{ .Values.apps.grafana.vault.serviceAccount.create }}
          vaultRoleName: {{ .Values.cluster.vaultRoleName }}
          mountPath: {{ .Values.cluster.mountPath | quote}}
          vaultKeyPath: {{ .Values.apps.grafana.vault.vaultKeyPath }}
        {{- end }}
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ include "grafana.namespace" . | quote }}

  {{- include "infra.syncPolicy" (list . "grafana" ) | nindent 2 }}

  ignoreDifferences:
  - kind: Secret
    jsonPointers:
    - /data/admin-password
  - group: "apps/v1"
    kind: Deployment
    jsonPointers:
    - /spec/template/metadata/annotations/checksum/secret
{{- end }}
